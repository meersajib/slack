{"ast":null,"code":"import _slicedToArray from\"E:\\\\code\\\\slack\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import'./Chat.css';import InfoOutlinedIcon from'@material-ui/icons/InfoOutlined';import StarBorderOutlinedIcon from'@material-ui/icons/StarBorderOutlined';import db from'../firebase';import Message from'./Message/Message';import ChatInput from'./ChatInput';function Chat(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),roomDetails=_useState2[0],setRoomDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),roomMessages=_useState4[0],setRoomMessages=_useState4[1];var _useParams=useParams(),roomId=_useParams.roomId;useEffect(function(){if(roomId){db.collection('rooms').doc(roomId).onSnapshot(function(snapshot){return setRoomDetails(snapshot.data());});}db.collection('rooms').doc(roomId).collection('messages').onSnapshot(function(snapshot){return setRoomMessages(snapshot.docs.map(function(doc){return doc.data();}));});},[roomId]);console.log(roomMessages);return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat__header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerLeft\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"chat__channelName\"},/*#__PURE__*/React.createElement(\"strong\",null,\"# \",roomDetails===null||roomDetails===void 0?void 0:roomDetails.name),\" \",/*#__PURE__*/React.createElement(StarBorderOutlinedIcon,null))),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerRight\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(InfoOutlinedIcon,null),\" Details\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__message\"},roomMessages===null||roomMessages===void 0?void 0:roomMessages.map(function(item){return/*#__PURE__*/React.createElement(\"span\",{key:item.user},/*#__PURE__*/React.createElement(Message,{user:item.user,userImage:item.userImage,message:item.message,timestamp:item.timestamp}));})),/*#__PURE__*/React.createElement(ChatInput,{channelName:roomDetails===null||roomDetails===void 0?void 0:roomDetails.name,channelId:roomId}));}export default Chat;","map":{"version":3,"sources":["E:/code/slack/src/Chat/Chat.js"],"names":["React","useState","useEffect","useParams","InfoOutlinedIcon","StarBorderOutlinedIcon","db","Message","ChatInput","Chat","roomDetails","setRoomDetails","roomMessages","setRoomMessages","roomId","collection","doc","onSnapshot","snapshot","data","docs","map","console","log","name","item","user","userImage","message","timestamp"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,uCAAnC,CACA,MAAOC,CAAAA,EAAP,KAAe,aAAf,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAGA,QAASC,CAAAA,IAAT,EAAgB,eACwBR,QAAQ,CAAC,IAAD,CADhC,wCACPS,WADO,eACMC,cADN,8BAE0BV,QAAQ,CAAC,EAAD,CAFlC,yCAEPW,YAFO,eAEOC,eAFP,8BAGKV,SAAS,EAHd,CAGNW,MAHM,YAGNA,MAHM,CAKdZ,SAAS,CAAC,UAAM,CACd,GAAIY,MAAJ,CAAY,CACVR,EAAE,CAACS,UAAH,CAAc,OAAd,EACGC,GADH,CACOF,MADP,EAEGG,UAFH,CAEc,SAACC,QAAD,QAAcP,CAAAA,cAAc,CAACO,QAAQ,CAACC,IAAT,EAAD,CAA5B,EAFd,EAGD,CACDb,EAAE,CAACS,UAAH,CAAc,OAAd,EACGC,GADH,CACOF,MADP,EAEGC,UAFH,CAEc,UAFd,EAGGE,UAHH,CAGc,SAAAC,QAAQ,QAAIL,CAAAA,eAAe,CAACK,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,SAAAL,GAAG,QAAIA,CAAAA,GAAG,CAACG,IAAJ,EAAJ,EAArB,CAAD,CAAnB,EAHtB,EAID,CAVQ,CAUN,CAACL,MAAD,CAVM,CAAT,CAWAQ,OAAO,CAACC,GAAR,CAAYX,YAAZ,EACE,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,2BAAK,SAAS,CAAC,kBAAf,eACE,0BAAI,SAAS,CAAC,mBAAd,eACE,uCAAWF,WAAX,SAAWA,WAAX,iBAAWA,WAAW,CAAEc,IAAxB,CADF,kBACyC,oBAAC,sBAAD,MADzC,CADF,CADF,cAME,2BAAK,SAAS,CAAC,mBAAf,eACE,0CACE,oBAAC,gBAAD,MADF,YADF,CANF,CADF,cAaE,2BAAK,SAAS,CAAC,eAAf,EACGZ,YADH,SACGA,YADH,iBACGA,YAAY,CAAES,GAAd,CAAkB,SAACI,IAAD,qBACjB,4BAAM,GAAG,CAAEA,IAAI,CAACC,IAAhB,eACE,oBAAC,OAAD,EACE,IAAI,CAAED,IAAI,CAACC,IADb,CAEE,SAAS,CAAED,IAAI,CAACE,SAFlB,CAGE,OAAO,CAAEF,IAAI,CAACG,OAHhB,CAIE,SAAS,CAAEH,IAAI,CAACI,SAJlB,EADF,CADiB,EAAlB,CADH,CAbF,cAyBE,oBAAC,SAAD,EAAW,WAAW,CAAEnB,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEc,IAArC,CAA2C,SAAS,CAAEV,MAAtD,EAzBF,CADF,CA6BH,CAED,cAAeL,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport './Chat.css'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined'\r\nimport db from '../firebase'\r\nimport Message from './Message/Message'\r\nimport ChatInput from './ChatInput'\r\n\r\n\r\nfunction Chat() {\r\n  const [roomDetails, setRoomDetails] = useState(null)\r\n  const [roomMessages, setRoomMessages] = useState([])\r\n  const { roomId } = useParams()\r\n  \r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\r\n    }\r\n    db.collection('rooms')\r\n      .doc(roomId)\r\n      .collection('messages')\r\n      .onSnapshot(snapshot => setRoomMessages(snapshot.docs.map(doc => doc.data())))\r\n  }, [roomId])\r\n  console.log(roomMessages)\r\n    return (\r\n      <div className='chat'>\r\n        <div className='chat__header'>\r\n          <div className='chat__headerLeft'>\r\n            <h4 className='chat__channelName'>\r\n              <strong># {roomDetails?.name}</strong> <StarBorderOutlinedIcon />\r\n            </h4>\r\n          </div>\r\n          <div className='chat__headerRight'>\r\n            <p>\r\n              <InfoOutlinedIcon /> Details\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className='chat__message'>\r\n          {roomMessages?.map((item) => (\r\n            <span key={item.user}>\r\n              <Message\r\n                user={item.user}\r\n                userImage={item.userImage}\r\n                message={item.message}\r\n                timestamp={item.timestamp}\r\n              />\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <ChatInput channelName={roomDetails?.name} channelId={roomId} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}